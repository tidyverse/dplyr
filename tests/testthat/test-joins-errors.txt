
empty strings in both sides of suffix argument
==============================================

> inner_join(e, f, "x", suffix = c("", ""))
Error: `suffix` can't be the empty string for both suffixes

> left_join(e, f, "x", suffix = c("", ""))
Error: `suffix` can't be empty string for both `x` and `y` suffixes

> right_join(e, f, "x", suffix = c("", ""))
Error: `suffix` can't be empty string for both `x` and `y` suffixes

> full_join(e, f, "x", suffix = c("", ""))
Error: `suffix` can't be empty string for both `x` and `y` suffixes


NA in any side of suffix argument
=================================

> inner_join(e, f, "x", suffix = c(".x", NA))
Error: `suffix` can't be NA

> left_join(e, f, "x", suffix = c(NA, ".y"))
Error: `suffix` can't be NA

> right_join(e, f, "x", suffix = as.character(c(NA, NA)))
Error: `suffix` can't be NA

> full_join(e, f, "x", suffix = c("x", NA))
Error: `suffix` can't be NA


check suffix input
==================

> inner_join(e, f, "x", suffix = letters[1:3])
Error: `suffix` must be a character vector of length 2
i suffix is a character vector of length 3

> inner_join(e, f, "x", suffix = letters[1])
Error: `suffix` must be a character vector of length 2
i suffix is a character vector of length 1

> inner_join(e, f, "x", suffix = 1:2)
Error: `suffix` must be a character vector of length 2
i suffix is an integer vector of length 2


column not found
================

> left_join(data.frame(x = 1:5), data.frame(y = 1:5), by = "x")
Error: `by` can't contain join column `x` which is missing from RHS

> left_join(data.frame(x = 1:5), data.frame(y = 1:5), by = "y")
Error: `by` can't contain join column `y` which is missing from LHS

> left_join(data.frame(x = 1:5), data.frame(y = 1:5))
Error: `by` required, because the data sources have no common variables

> left_join(data.frame(x = 1:5), data.frame(y = 1:5), by = 1:3)
Error: `by` must be a (named) character vector, list, or NULL for natural joins (not recommended in production code), not an integer vector


duplicate column
================

> df1 <- tibble(x = 1:3, x = 1:3, y = 1:3, .name_repair = "minimal")
> df2 <- tibble(x = 2:4, y = 2:4)
> left_join(df1, df2, by = c("x", "y"))
Error: Column `x` must have a unique name

> left_join(df2, df1, by = c("x", "y"))
Error: Column `x` must have a unique name

> right_join(df1, df2, by = c("x", "y"))
Error: Column `x` must have a unique name

> right_join(df2, df1, by = c("x", "y"))
Error: Column `x` must have a unique name

> inner_join(df1, df2, by = c("x", "y"))
Error: `nm` must be `NULL` or a character vector the same length as `x`

> inner_join(df2, df1, by = c("x", "y"))
Error: `nm` must be `NULL` or a character vector the same length as `x`

> full_join(df1, df2, by = c("x", "y"))
Error: Column `x` must have a unique name

> full_join(df2, df1, by = c("x", "y"))
Error: Column `x` must have a unique name

> semi_join(df1, df2, by = c("x", "y"))
Error: Column `x` must have a unique name

> semi_join(df2, df1, by = c("x", "y"))
Error: Column `x` must have a unique name

> anti_join(df1, df2, by = c("x", "y"))
Error: Column `x` must have a unique name

> anti_join(df2, df1, by = c("x", "y"))
Error: Column `x` must have a unique name

