> tbl <- tibble(x = 1:2, y = 1:2)

setting column to NULL makes it unavailable
===========================================

> tbl %>% mutate(y = NULL, a = sum(y))
Error: `mutate()` argument `a` errored.
i `a` is `sum(y)`.
x object 'y' not found

> tbl %>% group_by(x) %>% mutate(y = NULL, a = sum(y))
Error: `mutate()` argument `a` errored.
i `a` is `sum(y)`.
i The error occured in group 1: x = 1.
x object 'y' not found


incompatible column type
========================

> tibble(x = 1) %>% mutate(y = mean)
Error: `mutate()` argument `y` must be a vector.
i `y` is `mean`.
x `y` must be a vector, not a function.


Unsupported type
================

> df <- tibble(g = c(1, 1, 2, 2, 2), x = 1:5)
> df %>% mutate(out = env(a = 1))
Error: `mutate()` argument `out` must be a vector.
i `out` is `env(a = 1)`.
x `out` must be a vector, not an environment.

> df %>% group_by(g) %>% mutate(out = env(a = 1))
Error: `mutate()` argument `out` must be a vector.
i `out` is `env(a = 1)`.
i The error occured in group 1: g = 1.
x `out` must be a vector, not an environment.

> df %>% rowwise() %>% mutate(out = rnorm)
Error: `mutate()` argument `out` must be a vector.
i `out` is `rnorm`.
i The error occured in row 1.
x `out` must be a vector, not a function.
i Did you mean: `out = list(rnorm)` ?


incompatible types across groups
================================

> data.frame(x = rep(1:5, each = 3)) %>% group_by(x) %>% mutate(val = ifelse(x <
+ 3, "foo", 2))
Error: `mutate()` argument `val` must return compatible vectors across groups.
i `val` is `ifelse(x < 3, "foo", 2)`.
i Result type for group 1 (x = 1) : <character>.
i Result type for group 3 (x = 3) : <double>.

> tibble(a = 1:3, b = 4:6) %>% group_by(a) %>% mutate(if (a == 1) NULL else "foo")
Error: `mutate()` argument `..1` must return compatible vectors across groups.
i `..1` is `if (a == 1) NULL else "foo"`.
i Cannot combine NULL and non NULL results.


incompatible size
=================

> data.frame(x = c(2, 2, 3, 3)) %>% mutate(int = 1:5)
Error: `mutate()` argument `int` must be recyclable.
i `int` is `1:5`.
x `int` can't be recycled to size 4.
i `int` must be size 4 or 1, not 5.

> data.frame(x = c(2, 2, 3, 3)) %>% group_by(x) %>% mutate(int = 1:5)
Error: `mutate()` argument `int` must be recyclable.
i `int` is `1:5`.
i The error occured in group 1: x = 2.
x `int` can't be recycled to size 2.
i `int` must be size 2 or 1, not 5.

> data.frame(x = c(2, 3, 3)) %>% group_by(x) %>% mutate(int = 1:5)
Error: `mutate()` argument `int` must be recyclable.
i `int` is `1:5`.
i The error occured in group 1: x = 2.
x `int` can't be recycled to size 1.
i `int` must be size 1, not 5.

> data.frame(x = c(2, 2, 3, 3)) %>% rowwise() %>% mutate(int = 1:5)
Error: `mutate()` argument `int` must be recyclable.
i `int` is `1:5`.
i The error occured in row 1.
x `int` can't be recycled to size 1.
i `int` must be size 1, not 5.
i Did you mean: `int = list(1:5)` ?


.data pronoun
=============

> tibble(a = 1) %>% mutate(c = .data$b)
Error: `mutate()` argument `c` errored.
i `c` is `.data$b`.
x Column `b` not found in `.data`

> tibble(a = 1:3) %>% group_by(a) %>% mutate(c = .data$b)
Error: `mutate()` argument `c` errored.
i `c` is `.data$b`.
i The error occured in group 1: a = 1.
x Column `b` not found in `.data`

