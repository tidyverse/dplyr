% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count-tally.R
\name{tally}
\alias{tally}
\alias{add_tally}
\alias{count}
\alias{add_count}
\title{Count observations by group}
\usage{
tally(x, wt = NULL, sort = FALSE, name = NULL)

add_tally(x, wt = NULL, sort = FALSE, name = NULL)

count(
  x,
  ...,
  wt = NULL,
  sort = FALSE,
  name = NULL,
  .drop = group_by_drop_default(x)
)

add_count(x, ..., wt = NULL, sort = FALSE, name = NULL, .drop = deprecated())
}
\arguments{
\item{x}{A data frame, data frame extension (e.g. a tibble), or a
lazy data frame (e.g. from dbplyr or dtplyr).}

\item{wt}{<\code{\link[=dplyr_data_masking]{data-masking}}> If omitted, will count the
number of rows. If specified, will perform a "weighted" tally by summing
the (non-missing) values of variable \code{wt}.

If omitted, and column \code{n} exists, it will automatically be used as a
weighting variable, although you will have to specify \code{name} to provide
a new name for the output.}

\item{sort}{If \code{TRUE} will sort output in descending order of \code{n}.}

\item{name}{The name of the new column in the output.

If omitted, it will default to \code{n}. If there's already a column called \code{n},
it will error, and require you to specify the name.}

\item{...}{<\code{\link[=dplyr_data_masking]{data-masking}}> Variables to group by.}

\item{.drop}{For \code{count()}: if \code{FALSE} will include counts for empty groups
(i.e. for levels of factors that don't exist in the data). Deprecated for
\code{add_count()} since it didn't actually affect the output.}
}
\value{
An object of the same type as \code{.data}. \code{count()} and \code{add_count()}
group transiently, so the output has the same groups as the input.
}
\description{
\code{count()} lets you quickly count the unique values of a variable, or
unique combinations of multiple variables. \code{tally()} is a lower-level
helper that works on already grouped data. Both can perform weighted counts,
if you give \code{wt} the name of a variable to weight by.

\code{count()} and \code{tally()} are shortcuts for \code{summarise()}; \code{add_count()}
and \code{add_tally()} perform the identical operations but use \code{mutate()}
instead of \code{summarise()} so that they add a new column with group-wise
counts.
}
\examples{
# count() is a convenient way to get a sense of the distribution of
# values in a dataset
starwars \%>\% count(species)
starwars \%>\% count(species, sort = TRUE)

# use the `wt` argument to perform a weighted count. This is useful
# when the data has already been aggregated once
df <- tribble(
  ~name,    ~gender,   ~runs,
  "Max",    "male",       10,
  "Sandra", "female",      1,
  "Susan",  "female",      4
)
# counts rows:
df \%>\% count(gender)
# counts runs:
df \%>\% count(gender, wt = runs)

# tally() is a lower-level function that assumes you've done the grouping
starwars \%>\% tally()
starwars \%>\% group_by(species) \%>\% tally()

# both count() and tally() have add_ variants that work like
# mutate() instead of summarise
df \%>\% add_count(gender, wt = runs)
df \%>\% add_tally(wt = runs)
}
