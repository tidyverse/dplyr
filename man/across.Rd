% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/across.R
\name{current_key}
\alias{current_key}
\alias{current_column}
\alias{across}
\title{Apply a function or a set of functions to a set of columns}
\usage{
current_key()

current_column()

across(select, fns = identity)
}
\arguments{
\item{select}{tidy selection of columns}

\item{fns}{Functions to apply to each of the selected columns. Possible
values are:
\itemize{
\item A single function or a single quosure style lambda, e.g. \code{~ mean(.x, na.rm = TRUE)}
\item A named list of functions and/or lambdas
}}
}
\value{
A tibble
}
\description{
Creates a data frame by applying a set of functions to a tidy
selection of columns in the current slice
}
\details{
This allows you to use \code{\link[=select]{select()}} semantics inside in \code{\link[=summarise]{summarise()}} and \code{\link[=mutate]{mutate()}}

When a single function is given, it is applied to each of the selected columns
and the output columns are named after the selected input columns.

When a named list of functions is given, the result is made of as many columns
as the number of functions, each of these output columns is a pack, i.e.
a data frame column made from the result of the function applied across the
selected columns.

\code{current_column()} gives the name of the column currently being processed.

\code{current_key()} return metadata about the "current" element: a single row tibble, with one column per grouping variable
}
\examples{

# A single function
iris \%>\%
  group_by(Species) \%>\%
  summarise(across(starts_with("Sepal"), mean))

iris \%>\%
  group_by(Species) \%>\%
  summarise(across(starts_with("Sepal"), ~mean(.x, na.rm = TRUE)))

# a named list of functions
iris \%>\%
  group_by(Species) \%>\%
  summarise(across(starts_with("Sepal"), list(mean = mean, sd = sd)))

}
