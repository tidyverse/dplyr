% Generated by roxygen2 (4.0.1.99): do not edit by hand
\name{explain_sql}
\alias{explain.tbl_sql}
\alias{explain_sql}
\alias{show_sql}
\title{Show sql and query plans.}
\usage{
explain_sql(code)

show_sql(code)

\method{explain}{tbl_sql}(x, ...)
}
\arguments{
\item{code}{code to run. All sql queries executed during the running of the
code will be shown and explained.}

\item{x}{an sql-based table to explain.}

\item{...}{Ignored. Needed for compatibility with generic.}
}
\description{
Any queries run inside this function will automatically be explained:
displaying information about which indexes are used to optimise the query.
This requires a little bit of knowledge about how \code{EXPLAIN} works for
your database, but is very useful for diagnosing performance problems.
}
\examples{
if (require("RSQLite") && has_lahman("sqlite")) {

batting <- tbl(lahman_sqlite(), "Batting")

# Note that you have to do something that actually triggers a query
# inside the explain function
explain_sql(nrow(batting))
explain_sql(nrow(batting))

# nrow requires two queries the first time because it's the same as dim(x)[1]
# but the results are cached

show_sql(head(batting))
explain_sql(head(batting))

# If you just want to understand the sql for a tbl, use explain
explain(batting)

# The batting database has indices on all ID variables:
# SQLite automatically picks the most restrictive index
explain(filter(batting, lgID == "NL" & yearID == 2000))

# OR's will use multiple indexes
explain(filter(batting, lgID == "NL" | yearID == 2000))
}
}

