% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nth-value.R
\name{nth}
\alias{nth}
\alias{first}
\alias{last}
\title{Extract the first, last, or nth value from a vector}
\usage{
nth(x, n, order_by = NULL, default = NULL)

first(x, order_by = NULL, default = NULL)

last(x, order_by = NULL, default = NULL)
}
\arguments{
\item{x}{A vector}

\item{n}{For \code{nth()}, a single integer specifying the position.
Negative integers index from the end (i.e. \code{-1L} will return the
last value in the vector).}

\item{order_by}{An optional vector the same size as \code{x} used to determine the
order.}

\item{default}{A default value to use if the position does not exist in \code{x}.

If \code{NULL}, the default, a missing value is used.

If supplied, this must be a single value, which will be cast to the type of
\code{x}.}
}
\value{
A vector the same type as \code{x} with size 1.
}
\description{
These are useful helpers for extracting a single value from a vector. They
always return a result that is size 1, even when the input is shorter than
expected. You can also provide an optional secondary vector that defines the
ordering.
}
\examples{
x <- 1:10
y <- 10:1

first(x)
last(y)

nth(x, 1)
nth(x, 5)
nth(x, -2)

# `first()` and `last()` are often useful in `summarise()`
df <- tibble(x = x, y = y)
df \%>\%
  summarise(
    across(x:y, first, .names = "{col}_first"),
    y_last = last(y)
  )

# Selecting a position that is out of bounds returns a default value
nth(x, 11)
nth(x, 0)

last(x)
# `order_by` provides optional ordering
last(x, order_by = y)

# These functions always return a single value, even with empty vectors
first(integer())

# For data frames, these select entire rows
df <- tibble(a = 1:5, b = 6:10)
first(df)
nth(df, 4)
}
